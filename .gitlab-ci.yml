stages:
  - build
  - test

image: rocker/r-ver

variables:
  R_LIBS_USER: "$CI_PROJECT_DIR/ci/lib"

before_script:
  ## Cache apt.
  - export APT_DIR=$CI_PROJECT_DIR/.apt && export APT_STATE_LISTS=$APT_DIR/lists && export APT_CACHE_ARCHIVES=$APT_DIR/archives
  - printf "dir::state::lists    ${APT_STATE_LISTS};\ndir::cache::archives    ${APT_CACHE_ARCHIVES};\n" > /etc/apt/apt.conf
  - mkdir -p "${APT_STATE_LISTS}/partial" && mkdir -p "${APT_CACHE_ARCHIVES}/partial"
  ## Install apt dependencies for packages.
  - apt-get update -qq
  - apt-get update && apt-get install -y libxml2-dev libssl-dev libcurl4-openssl-dev zlib1g-dev libglu1-mesa-dev libfreetype6-dev netbase > /dev/null
  - apt-get install -y wget locales libcairo2-dev libxml2-dev libssl-dev libcurl4-openssl-dev zlib1g-dev libglu1-mesa-dev libfreetype6-dev > /dev/null
  ## Install qpdf - needed for checking vignettes.
  - apt-get update && apt-get install -y --no-install-recommends qpdf ghostscript > /dev/null
  ## Install pandoc - needed for checking readme.
  - apt-get update && apt-get install -y pandoc pandoc-citeproc > /dev/null
  ## Create directory for caching R packages.
  - mkdir -p $R_LIBS_USER
  ## Add R_LIBS_USER to libpaths.
  - echo '.libPaths("'${R_LIBS_USER}'")' > .Rprofile

R-release:
  stage: build
  allow_failure: false
  script:
    - Rscript -e 'sessionInfo()'
    ## Install missing and outdated packages.
    - Rscript -e 'source(".gitlab-ci.R"); pkgsUpdate(quiet = TRUE, instPkgdown = FALSE)'
    ## Build package.
    - R CMD build . --no-manual
    - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)
    - R CMD check "${PKG_FILE_NAME}" --no-manual --as-cran
  artifacts:
    when: always
    paths:
      - '*.Rcheck/*'
    expire_in: '1 month'
  cache:
    key: release-cache
    paths:
      - $R_LIBS_USER
      - $CI_PROJECT_DIR/.apt

R-devel:
  stage: build
  image: rocker/r-devel
  allow_failure: true
  script:
    - Rscriptdevel -e 'sessionInfo()'
    ## Install missing and outdated packages.
    - Rscriptdevel -e 'source(".gitlab-ci.R"); pkgsUpdate(quiet = TRUE, instPkgdown = FALSE)'
    ## Build package.
    - Rdevel CMD build . --no-manual
    - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)
    - Rdevel CMD check "${PKG_FILE_NAME}" --no-manual --as-cran
  artifacts:
    when: always
    paths:
      - '*.Rcheck/*'
    expire_in: '1 month'
  cache:
    key: devel-cache
    paths:
      - $R_LIBS_USER
      - $CI_PROJECT_DIR/.apt

coverage:
  stage: test
  allow_failure: true
  dependencies:
    - R-release
  when: on_success
  cache:
    key: release-cache
    paths:
      - $R_LIBS_USER
      - $CI_PROJECT_DIR/.apt
    policy: pull
  only:
    - develop
    - master
  before_script:
    ## Add R_LIBS_USER to libpaths.
    - echo '.libPaths("'${R_LIBS_USER}'")' > .Rprofile
  script:
    - Rscript -e 'covr::package_coverage(line_exclusions = "R/fitTDAsreml.R", function_exclusions = c("extractAsreml", "createReport"))'
  coverage: '/Coverage:\s*(\d+.\d+\%)/'
