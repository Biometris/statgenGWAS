[{"path":"/articles/GWAS.html","id":"the-statgengwas-package","dir":"Articles","previous_headings":"","what":"The statgenGWAS package","title":"Introduction to the statgenGWAS package","text":"statgenGWAS package designed performing single trait Genome Wide Association Studies (GWAS). purpose GWAS determine alleles correlate different traits.","code":""},{"path":"/articles/GWAS.html","id":"theoretical-background","dir":"Articles","previous_headings":"The statgenGWAS package","what":"Theoretical background","title":"Introduction to the statgenGWAS package","text":"Suppose \\(n\\) measurements phenotype \\(t\\) genotypes. common linear mixed model association mapping \\[y = X\\beta + Zu + e,\\] \\(y\\) \\(n \\times 1\\) vector observed phenotypes \\(X\\) \\(n \\times q\\) design matrix fixed effects, including intercept, covariates, SNP interest. \\(\\beta\\) \\(q \\times 1\\) vector coefficients fixed effects, last element (\\(\\beta_{\\textrm{SNP}}\\)) SNP-effect interest. \\(Z\\) \\(n \\times t\\) incidence matrix assigning individuals genotypes. \\(u\\) vector genetic random effects, \\(var(u) = \\sigma^2_g K\\), \\(K\\) marker-based relatedness matrix. Finally, \\(e\\) \\(n \\times 1\\) vector residual (non-genetic) errors, \\(var(\\epsilon) = \\sigma^2_e I_n\\). model phenotypic variance-covariance matrix \\(\\Sigma = \\sigma^2_g ZKZ^{t} + \\sigma^2_e I_n\\).","code":""},{"path":"/articles/GWAS.html","id":"application-in-the-package","dir":"Articles","previous_headings":"The statgenGWAS package","what":"Application in the package","title":"Introduction to the statgenGWAS package","text":"Single trait GWAS statgenGWAS package follows approach Kang et al. (2010) related papers: ‘empty’ model (.e., without SNP fixed effects), obtain REML-estimates variance components \\(\\sigma^2_g\\) \\(\\sigma^2_e\\), give estimate \\(\\hat \\Sigma\\) variance-covariance matrix. Fixing \\(\\hat \\Sigma\\), use generalized least-squares (GLS) test null-hypothesis \\(\\beta_{\\textrm{SNP}} = 0\\) using F-test, SNP turn. last step gives vectors estimated effect-size P-values SNPs. steps repeated combination trial trait analysis run. REML-estimates step (1) can computed using either Efficient Mixed Model Association (EMMA) algorithm (Kang et al. 2008), Newton-Raphson (NR) algorithm (Tunnicliffe 1989). implementation GLS borrows code Segura et al. (2012).","code":""},{"path":"/articles/GWAS.html","id":"the-class-gdata","dir":"Articles","previous_headings":"","what":"The class gData","title":"Introduction to the statgenGWAS package","text":"Data analysis genomic data comes different sources stored one data object class gData (genomic Data) convenience. gData object contain data needed performing analyses, first thing using statgenGWAS package creating gData object. gData object consists different types data. data optional, however certain analyses, certain data required. Additional data can always added existing object later . gData object can created using function createGData. existing gData object provided input function, data added existing object existing data overwritten warning necessary. data checked consistency , needed, default names added warning message. gData object created way consist following components:","code":""},{"path":"/articles/GWAS.html","id":"marker-map","dir":"Articles","previous_headings":"The class gData","what":"Marker map","title":"Introduction to the statgenGWAS package","text":"data.frame map used describe physical positions markers chromosomes. data consists two columns, chr name number chromosome pos position marker chromosome. position can basepair centimorgan. names markers row names data.frame.","code":""},{"path":"/articles/GWAS.html","id":"marker-matrix","dir":"Articles","previous_headings":"The class gData","what":"Marker matrix","title":"Introduction to the statgenGWAS package","text":"marker matrix stored matrix marker within gData object. names markers column names genotypes row names. Markers can either coded character strings numerical values. former case, performing analysis, marker matrix converted numerical matrix. can using function codeMarkers.","code":""},{"path":"/articles/GWAS.html","id":"phenotypic-data","dir":"Articles","previous_headings":"The class gData > Marker matrix","what":"Phenotypic data","title":"Introduction to the statgenGWAS package","text":"Phenotypic data, either directly field trials summarizing can stored pheno gData object. Pheno can either single data.frame list data.frames storing data different trials different summarizations original data. first column elements pheno genotype columns represent different traits. Storing additional variables done covar. single data.frame converted one-item list upon creation gData object.","code":""},{"path":"/articles/GWAS.html","id":"kinship-matrix","dir":"Articles","previous_headings":"The class gData","what":"Kinship matrix","title":"Introduction to the statgenGWAS package","text":"kinship matrix describes genetic relatedness different genotypes. stored matrix kinship gData object. square matrix genotypes row column names measure genetic relatedness cells. many ways computing genetic relatedness included package. Instead providing one kinship matrix list kinship matrices can provided matrix list chromosome specific kinship matrix, usually computed using markers corresponding chromosome. named list kinship matrices provided, names match names numbers chromosomes map. Unnamed lists given default names.","code":""},{"path":"/articles/GWAS.html","id":"further-covariates","dir":"Articles","previous_headings":"The class gData","what":"Further covariates","title":"Introduction to the statgenGWAS package","text":"covariates can used analyses can stored data.frame covar. data.frame genotypes row names covariates column names. Covariates can numerical, factor character data. latter converted factor creating gData object.","code":""},{"path":"/articles/GWAS.html","id":"worked-example","dir":"Articles","previous_headings":"","what":"Worked example","title":"Introduction to the statgenGWAS package","text":"example functionality package worked example provided using maize data European Union project DROPS. data available https://data.inrae.fr/dataset.xhtml?persistentId=doi:10.15454/IASSTN (Millet et al. 2019) relevant data sets included data.frames statgenGWAS package.","code":""},{"path":"/articles/GWAS.html","id":"load-data","dir":"Articles","previous_headings":"Worked example","what":"Load data","title":"Introduction to the statgenGWAS package","text":"first step loading data R. dropsMarkers contains coded marker information 41722 SNPs 246 genotypes. dropsMap contains information positions SNPs B73 reference genome V2. dropsPheno contains data genotypic means (Best Linear Unbiased Estimators, BLUEs), one value per experiment per genotype, eight traits. detailed description contents data see help(dropsData).","code":"data(dropsMarkers) data(dropsMap) data(dropsPheno)"},{"path":"/articles/GWAS.html","id":"create-gdata-object","dir":"Articles","previous_headings":"Worked example","what":"Create gData object","title":"Introduction to the statgenGWAS package","text":"next step create gData object raw data can used GWAS analysis. raw data converted suitable format gData object. creating gData object, markers input matrix data.frame genotypes row names markers column names. latter already satisfied row names added Ind column used dropped. map used input creating gData object, least columns “chr” “pos” row names names SNPs. columns ignored creating gData object, can left . Now gData object containing map marker information can created. object can used base. Phenotypic data, kinship matrix covariates may added later . next step involves adding phenotypic data gData object just created. dropsPheno contains genotypic means 28 trials. able run GWAS analysis per trial data added list 28 data.frames. data.frames “genotype” first column may contain traits . columns need dropped. phenotypic data can added gDataDrops using function used creating object. Adding argument gData function call add new data existing gData object. gDataDrops non-empty, phenotypic data already present overwritten. Note phenotypic data consists one trial/experiment, can added single data.frame without first converting list. case createGData convert input list one item. get idea contents data summary gData object can made. give overview content map markers also print summary per trait per trial. Since 28 trials 8 traits gDataDrops giving large summary, output restricted one trial, Mur13W, using trials parameter summary function. also possible plot genetic map gData object. show length chromosomes position markers gData object chromosomes. also possible highlight one markers.  highlight marker, parameter highlight can used. requires data.frame least column “chr” “pos”. column name present used annotate highlighted marker. name column present annotation form pos@chr.","code":"## Add genotypes as row names of dropsMarkers and drop Ind column. rownames(dropsMarkers) <- dropsMarkers[[\"Ind\"]] dropsMarkers <- dropsMarkers[colnames(dropsMarkers) != \"Ind\"] ## Add genotypes as row names of dropsMap. rownames(dropsMap) <- dropsMap[[\"SNP.names\"]] ## Rename Chomosome and Position columns. colnames(dropsMap)[match(c(\"Chromosome\", \"Position\"), colnames(dropsMap))] <- c(\"chr\", \"pos\") ## Create a gData object containing map and marker information. gDataDrops <- createGData(geno = dropsMarkers, map = dropsMap) ## Rename Variety_ID to genotype. colnames(dropsPheno)[colnames(dropsPheno) == \"Variety_ID\"] <- \"genotype\" ## Select relevant columns and convert data to a list. dropsPhenoList <- split(x = dropsPheno[c(\"genotype\", \"grain.yield\",                                          \"grain.number\", \"seed.size\",                                          \"anthesis\", \"silking\", \"plant.height\",                                          \"tassel.height\", \"ear.height\")],                          f = dropsPheno[[\"Experiment\"]]) ## Add phenotypic data to gDataDrops. gDataDrops <- createGData(gData = gDataDrops, pheno = dropsPhenoList) ## Summarize gDataDrops. summary(gDataDrops, trials = \"Mur13W\") #> map #>  Number of markers: 41722  #>  Number of chromosomes: 10  #>  #> markers #>  Number of markers: 41722  #>  Number of genotypes: 246  #>  Content: #>   0 1 2 NA  #>   0.28 0.01 0.71 0  #>  #> pheno #>  Number of trials: 1  #>  #>  Mur13W: #>      Number of traits: 8  #>      Number of genotypes: 246  #>  #>         grain.yield grain.number seed.size anthesis silking plant.height tassel.height ear.height #> Min.            3.3         1348       229       56      59          222            NA        102 #> 1st Qu.         6.3         2641       284       61      64          251            NA        125 #> Median          7.5         2965       298       63      66          258            NA        133 #> Mean            7.4         2986       297       63      66          259           NaN        133 #> 3rd Qu.         8.4         3359       312       66      68          266            NA        141 #> Max.           11.4         4510       365       71      74          294            NA        172 #> NA's            0.0            0         0        0       0            0           246          0 ## Plot genetic map. plot(gDataDrops) ## Plot genetic map. ## Highlight the 20.000th marker in the map. plot(gDataDrops, highlight = dropsMap[20000, ])"},{"path":"/articles/GWAS.html","id":"recoding-and-cleaning-of-markers","dir":"Articles","previous_headings":"Worked example","what":"Recoding and cleaning of markers","title":"Introduction to the statgenGWAS package","text":"Marker data numerical without missing values order GWAS analysis. can achieved using codeMarkers function. marker data available DROPS project already converted /T/C/G 0/1/2. codeMarkers function package can still used clean markers, e.g. removing duplicate SNPs. Note duplicate SNPs removed random. get reproducible results make sure set seed. demonstrate options codeMarkers function, randomly replace 1% values marker matrix NA. re-impute missing values added , codeMarkers run impute = TRUE. type imputation can chosen setting parameter imputeType: imputeType = \"fixed\": Impute missing values single fixed value. Use parameter fixedValue set value. imputeType = \"random\": Impute missing values random value based non-missing values SNP. imputeType = \"beagle\": Impute missing values using independent beagle software (Browning Browning 2007). Version 5.2 software included package called default settings. requires java run. Since running beagle takes long time current data, call beagle shown run. imputation, genotypes high proportion missing values marker matrix can removed setting parameter nMissGeno. Setting 0.1 remove genotypes proportion missing values higher 0.1. similar way SNPs high proportion missing values can removed setting nMiss. default value parameters 1, genotypes SNPs missing values always removed. parameter MAF can used remove SNPs Minor Allele Frequency (MAF) lower specified MAF. removing duplicate SNPs done imputation.","code":"## Remove duplicate SNPs from gDataDrops. gDataDropsDedup <- codeMarkers(gDataDrops, impute = FALSE, verbose = TRUE)  #> Input contains 41722 SNPs for 246 genotypes. #> 0 genotypes removed because proportion of missing values larger than or equal to 1. #> 0 SNPs removed because proportion of missing values larger than or equal to 1. #> 5098 duplicate SNPs removed. #> Output contains 36624 SNPs for 246 genotypes. ## Copy gData object. gDataDropsMiss <- gDataDrops ## Add random missing values to 1% of the values in the marker matrix. set.seed(1) nVal <- nrow(gDataDropsMiss$markers) * ncol(gDataDropsMiss$markers) gDataDropsMiss$markers[sample(x = 1:nVal, size = nVal / 100)] <- NA ## Impute missing values with random value. ## Remove SNPs and genotypes with proportion of NA larger than 0.01. gDataDropsImputed <- codeMarkers(gData = gDataDropsMiss,                                  nMissGeno = 0.01,                                   nMiss = 0.01,                                   impute = TRUE,                                   imputeType = \"random\",                                   verbose = TRUE) #> Input contains 41722 SNPs for 246 genotypes. #> 119 genotypes removed because proportion of missing values larger than or equal to 0.01. #> 14341 SNPs removed because proportion of missing values larger than or equal to 0.01. #> 882 duplicate SNPs removed. #> 15213 missing values imputed. #> 1046 duplicate SNPs removed after imputation. #> Output contains 25453 SNPs for 127 genotypes. ## Impute missing values using beagle software. gDataDropsImputedBeagle <- codeMarkers(gData = gDataDropsMiss,                                         impute = TRUE,                                        imputeType = \"beagle\",                                        verbose = TRUE)"},{"path":"/articles/GWAS.html","id":"single-trait-gwas","dir":"Articles","previous_headings":"Worked example","what":"Single trait GWAS","title":"Introduction to the statgenGWAS package","text":"cleaned gData object can used performing single trait GWAS analysis runSingleTraitGwas function. default parameter values function chosen way usually analysis gives decent results. examples trial Mur13W used demonstrate options runSingleTraitGwas function. output runSingleTraitGwas function object class GWAS. list consisting five components described .GWAResult: list data.tables, one trial analysis run. data.table following columns: Note estimated effect computed single allele. direction depends coding markers gData object. example minor allele used reference allele, effects estimated effects minor allele. signSnp: list data.tables, one trial analysis run, containing significant SNPs. Optionally also SNPs close significant SNPs included data.table. See 3.6.7 information . data.tables signSnp consist columns GWAResult described . Two extra columns added: kinship: kinship matrix (matrices) used GWAS analysis. can either user provided kinship matrix kinship matrix computed running runSingleTraitGwas function. thr: list thresholds, one trial analysis run, used determining significant SNPs. GWASInfo: additional information analysis, e.g. call type threshold used.","code":"## Run single trait GWAS for traits 'grain.yield' and 'anthesis' for trial Mur13W. GWASDrops <- runSingleTraitGwas(gData = gDataDropsDedup,                                 trials = \"Mur13W\",                                 traits = c(\"grain.yield\", \"anthesis\")) print(head(GWASDrops$GWAResult$Mur13W), row.names = FALSE) #>        trait           snp chr    pos allFreq pValue effect effectSe    RLR2   LOD #>  grain.yield         SYN83   1   3498    0.60   0.38 -0.084    0.097 0.00310 0.417 #>  grain.yield PZE-101000060   1 157104    0.72   0.51  0.067    0.102 0.00176 0.291 #>  grain.yield PZE-101000088   1 238347    0.84   0.83 -0.027    0.125 0.00019 0.081 #>  grain.yield PZE-101000083   1 239225    0.58   0.22 -0.113    0.092 0.00615 0.660 #>  grain.yield PZE-101000108   1 255850    0.90   0.47 -0.124    0.170 0.00215 0.330 #>  grain.yield PZE-101000111   1 263938    0.83   0.32 -0.117    0.119 0.00395 0.489 print(GWASDrops$signSnp$Mur13W, row.names = FALSE) #>        trait           snp chr      pos allFreq  pValue effect effectSe  RLR2 LOD       snpStatus #>  grain.yield PZE-106021363   6 18846283    0.70 3.5e-07   0.52      0.1 0.096 6.5 significant SNP #>  grain.yield PZE-106021410   6 18990291    0.70 2.3e-07   0.53      0.1 0.098 6.6 significant SNP #>  grain.yield PZE-106021419   6 18991091    0.74 2.9e-07   0.53      0.1 0.097 6.5 significant SNP #>  grain.yield PZE-106021420   6 18991117    0.70 1.3e-06   0.50      0.1 0.087 5.9 significant SNP #>  grain.yield PZE-106021424   6 18991481    0.74 5.0e-07   0.52      0.1 0.093 6.3 significant SNP #>  propSnpVar #>       0.088 #>       0.090 #>       0.083 #>       0.080 #>       0.080"},{"path":"/articles/GWAS.html","id":"gwas-summary","dir":"Articles","previous_headings":"Worked example","what":"GWAS Summary","title":"Introduction to the statgenGWAS package","text":"quick overview results, e.g. number significant SNPs, use summary function.","code":"## Create summary of GWASDrops. summary(GWASDrops) #> Mur13W: #>  Traits analysed: grain.yield, anthesis  #>  #>  Data are available for 36624 SNPs. #>   0 of them were not analyzed because their minor allele frequency is below 0.01  #>  #>  GLSMethod: single  #>  kinshipMethod: astle  #>  #>  Trait: grain.yield  #>  #>      Mixed model with only polygenic effects, and no marker effects: #>      Genetic variance: 0.96  #>      Residual variance: 0.21  #>  #>      LOD-threshold: 5.9  #>      Number of significant SNPs: 5  #>      Smallest p-value among the significant SNPs: 2.3e-07  #>      Largest p-value among the significant SNPs: 1.3e-06 (LOD-score: 5.9) #>  #>      No genomic control correction was applied #>      Genomic control inflation-factor: 0.99  #>  #>  Trait: anthesis  #>  #>      Mixed model with only polygenic effects, and no marker effects: #>      Genetic variance: 4  #>      Residual variance: 0.87  #>  #>      LOD-threshold: 5.9  #>      Number of significant SNPs: 0  #>  #>      No genomic control correction was applied #>      Genomic control inflation-factor: 0.97"},{"path":"/articles/GWAS.html","id":"gwas-plots","dir":"Articles","previous_headings":"Worked example","what":"GWAS Plots","title":"Introduction to the statgenGWAS package","text":"plot.GWAS function can used visualize results GWASDrops, QQ-plot, Manhattan plot QTL-plot.","code":""},{"path":"/articles/GWAS.html","id":"qq-plots","dir":"Articles","previous_headings":"Worked example > GWAS Plots","what":"QQ-plots","title":"Introduction to the statgenGWAS package","text":"QQ-plot observed expected \\(-\\log_{10}(p)\\) values can made setting plotType = \"qq\". SNPs expected effect, resulting P-values uniformly distributed \\([0,1]\\), leading identity function (\\(y=x\\)) \\(-\\log_{10}(p)\\) scale. plot , deviations line occur right side plot, small number SNPs effect phenotype (possibly SNPs LD). inflation observed \\(-\\log_{10}(p)\\) values always line \\(y=x\\), (less common) deflation always line. QQ-plot therefore gives first impression quality GWAS model: example \\(-\\log_{10}(p)\\) values consistently large (inflation), correction genetic relatedness may adequate.","code":"## Plot a QQ-plot of GWAS Drops. plot(GWASDrops, plotType = \"qq\", trait = \"grain.yield\")"},{"path":"/articles/GWAS.html","id":"manhattan-plots","dir":"Articles","previous_headings":"Worked example > GWAS Plots","what":"Manhattan plots","title":"Introduction to the statgenGWAS package","text":"manhattan plot made setting plotType = \"manhattan\". Significant SNPs marked red.  change threshold plotting, without redo GWAS analysis, use parameter yThr. Use chr plot subset chromosomes. plotting single chromosome possible specify startPos /endPos indicate start position end position SNPs plotted.  number SNPs gets large, plotting might get slow. can dealt setting parameter lod. , SNPs LOD-value lod, 5% plotted. chance SNP plotted proportional LOD-value. SNPs higher LOD higher chance plotted. Since SNPs low LOD-values, restriction doesn’t much affect resulting plot. Note 5% SNPs plotted, selected randomly. reproducible results make sure set seed.  user can specify known effects (effects), used determining true/false positives false negatives. displayed green, orange yellow, respectively. plot now shows PZE-106021410 green, since SNP known effect also found GWAS analyses. SNPs chromosome 6 shown orange, found GWAS, known effects. PZE-105012420 shown yellow, SNP known effect isn’t picked significant analysis. Note PZE-106021410 PZE-105012420 chosen solely demonstrate effects options works making manhattan plot, don’t represent truly known effects. Also visual appearance plot can altered, e.g specifying colors chromosomes custom title. See specifics help(plot.GWAS).","code":"## Plot a manhattan plot of GWAS Drops. plot(GWASDrops, plotType = \"manhattan\", trait = \"grain.yield\") ## Plot a manhattan plot of GWAS Drops. ## Set significance threshold to 4 and only plot chromosomes 6 to 8. plot(GWASDrops, plotType = \"manhattan\", trait = \"grain.yield\", yThr = 4, chr = 6:8) ## Plot a manhattan plot of GWAS Drops. ## Set significance threshold to 4 and only plot first part of chromosome 6. plot(GWASDrops, plotType = \"manhattan\", trait = \"grain.yield\",       yThr = 4, chr = 6, startPos = 0, endPos = 6e7) ## Plot a manhattan plot of GWAS Drops. ## Plot only 5% of SNPs with a LOD below 3. set.seed(1) plot(GWASDrops, plotType = \"manhattan\", trait = \"grain.yield\", lod = 3) ## Plot a manhattan plot of GWAS Drops with significance threshold 4. ## Assume PZE-106021410 and PZE-105012420 are SNPs with known effects. plot(GWASDrops, plotType = \"manhattan\", trait = \"grain.yield\",       effects = c(\"PZE-106021410\", \"PZE-105012420\"))"},{"path":"/articles/GWAS.html","id":"qtl-plots","dir":"Articles","previous_headings":"Worked example > GWAS Plots","what":"QTL plots","title":"Introduction to the statgenGWAS package","text":"qtl plot can made setting plotType = \"qtl\". plot significant SNPs marked circles genomic positions, diameter proportional estimated effect size; example see Millet et al. (2016). Typically, done multiple traits environments, genomic position x-axis, displayed horizontally can thus compared.  case, “anthesis” significant SNPs line left . change threshold plotting without redo GWAS analysis, use parameter yThr.  Now significant SNPs traits. However since traits measured different scale, effect estimates compared. better comparison, one can set normalize = TRUE, divides estimates standard deviation phenotype.  Now effects scale comparable. parameters can used plot subset chromosomes (chr) directly export plot .pptx (exportPptx = TRUE specify pptxName). Note officer package required . full list parameters can found running help(plot.GWAS).","code":"## Plot a qtl plot of GWAS Drops for Mur13W. plot(GWASDrops, plotType = \"qtl\") ## Plot a qtl plot of GWAS Drops for Mur13W. ## Set significance threshold to 4. plot(GWASDrops, plotType = \"qtl\", yThr = 4) ## Plot a qtl plot of GWAS Drops for Mur13W. ## Set significance threshold to 4 and normalize effect estimates. plot(GWASDrops, plotType = \"qtl\", yThr = 4, normalize = TRUE)"},{"path":"/articles/GWAS.html","id":"kinship-matrices","dir":"Articles","previous_headings":"","what":"Kinship matrices","title":"Introduction to the statgenGWAS package","text":"runSingleTraitGwas function argument kinshipMethod, defines kinship matrix used association mapping. Kinship matrices can computed directly using kinship function within runSingleTraitGwas function. four options: using covariance scaled SNP-scores (kinshipMethod = \"astle\", default; see e.g. equation (2.2) Astle Balding (2009)) Identity State (kinshipMethod = \"IBS\"; see e.g. equation (2.3) Astle Balding (2009)) using formula VanRaden (2008) (kinshipMethod = \"vanRaden\") User-defined, case parameter kin needs specified. default, kinship matrix used testing SNPs (GLSMethod = \"single\"). GLSMethod = \"multi\", kinship matrix chromosome-specific. case, function fits variance components computes effect-estimates P-values chromosome turn, using kinship matrix chromosome. chromosome-specific kinship matrix computed using method specified argument kinshipMethod, using SNPs chromosome. shown Rincent et al. (2014), often gives considerable improvement power.","code":"## Run single trait GWAS for trial 'Mur13W' and trait 'grain.yield' ## Use chromosome specific kinship matrices computed using method of van Raden. GWASDropsChrSpec <- runSingleTraitGwas(gData = gDataDropsDedup,                                         traits = \"grain.yield\",                                        trials = \"Mur13W\",                                        GLSMethod = \"multi\",                                        kinshipMethod = \"vanRaden\")"},{"path":"/articles/GWAS.html","id":"opts","dir":"Articles","previous_headings":"","what":"Further options","title":"Introduction to the statgenGWAS package","text":"runSingleTraitGwas function many parameters can specified. section similar parameters grouped explained examples use .","code":""},{"path":"/articles/GWAS.html","id":"multiple-trials-and-traits","dir":"Articles","previous_headings":"Further options","what":"Multiple trials and traits","title":"Introduction to the statgenGWAS package","text":"analysis can performed one trait single function call. specifying traits perform analysis traits present phenotypic data gData object. results combined single output object traits specified column trait GWAResult signSnp within object. Running multiple trials also possible generate list outputs within GWAResult signSnp output object. specifying trials run GWAS analysis trials phenotypic data gData object.","code":""},{"path":"/articles/GWAS.html","id":"significance-thresholds","dir":"Articles","previous_headings":"Further options","what":"Significance thresholds","title":"Introduction to the statgenGWAS package","text":"threshold selecting significant SNPs GWAS analysis computed default using Bonferroni correction, alpha 0.05. alpha can modified setting option alpha calling runSingleTraitGwas. Two threshold types can used: fixed threshold (thrType = \"fixed\") specifying \\(-\\log_{10}(p)\\) (LODThr) value threshold, threshold defines n SNPs highest \\(-\\log_{10}(p)\\) scores significant SNPs. Set thrType = \"small\" together nSnpLOD = n . following example, select SNPs \\(p < 10^{-4}\\).","code":"## Run single trait GWAS for trait 'grain.yield' for Mur13W. ## Use a fixed significance threshold of 4. GWASDropsFixThr <- runSingleTraitGwas(gData = gDataDropsDedup,                                       trials = \"Mur13W\",                                       traits = \"grain.yield\",                                       thrType = \"fixed\",                                       LODThr = 4)"},{"path":"/articles/GWAS.html","id":"controlling-false-discovery-rate","dir":"Articles","previous_headings":"Further options > Significance thresholds","what":"Controlling false discovery rate","title":"Introduction to the statgenGWAS package","text":"final option selecting significant SNPs setting thrType = \"fdr\". significant SNPs won’t selected computing genome wide threshold, trying control rate false discoveries Brzyski et al. (2016). First, list defined containing SNPs p-Value pThr. clusters SNPs created using two step iterative process SNPs lowest p-values selected cluster representatives. SNP SNPs correlation SNP \\(\\rho\\) higher (specified function parameter rho) form cluster. selected SNPs removed list procedure repeated SNPs left. end step, one list clusters, corresponding vector p-values cluster representatives. Finally, determine number significant clusters, first cluster determined p-value cluster representative larger \\(cluster_{number} * \\alpha / m\\), \\(m\\) number SNPs \\(\\alpha\\) can specified corresponding function parameter. previous clusters selected significant. Note way significant SNPs selected possible SNP lower p-Value significant SNP significant . happens SNP highly correlated another SNP even lower p-Value. possible determine threshold p-Value SNPs significant. value threshold output therefor NA line plotted manhattan plot.","code":""},{"path":"/articles/GWAS.html","id":"variance-covariance-matrix","dir":"Articles","previous_headings":"Further options","what":"Variance covariance matrix","title":"Introduction to the statgenGWAS package","text":"two ways compute phenotypic variance covariance matrix used GWAS analysis. Either EMMA algorithm Newton-Raphson algorithm. Specify method setting parameter remlAlgo either \"EMMA\" \"NR\". default EMMA algorithm used.","code":"## Run single trait GWAS for trait 'grain.yield' for Mur13W. ## Use the Newton Raphson algorithm for computing the variance components. GWASDropsNR <- runSingleTraitGwas(gData = gDataDropsDedup,                                   trials = \"Mur13W\",                                   traits = \"grain.yield\",                                   remlAlgo = \"NR\")"},{"path":"/articles/GWAS.html","id":"gcCorr","dir":"Articles","previous_headings":"Further options","what":"Genomic control correction","title":"Introduction to the statgenGWAS package","text":"GWAS object returned runSingleTraitGwas, inflation factor (Devlin Roeder 1999) returned GWASInfo. also shown summary. Ideally factor 1, meaning inflation . practice however rarely happens. value Mur13W can checked follows: values close 1, case need apply correction based . values away 1, inflation can corrected setting genomicControl = TRUE runSingleTraitGwas.","code":"GWASDrops$GWASInfo$inflationFactor$Mur13W #> grain.yield    anthesis  #>        0.99        0.97 ## Run single trait GWAS for trait 'grain.yield' for Mur13W. ## Perform genomic correction on the p-Values. GWASDropsGenControl <- runSingleTraitGwas(gData = gDataDropsDedup,                                           trials = \"Mur13W\",                                           traits = \"grain.yield\",                                           genomicControl = TRUE)"},{"path":"/articles/GWAS.html","id":"covariates","dir":"Articles","previous_headings":"Further options","what":"Covariates","title":"Introduction to the statgenGWAS package","text":"Covariates can included extra fixed effects GWAS model. runSingleTraitGwas function distinguishes ‘usual’ covariates SNP-covariates. former design factors block, traits one wants condition . latter case, covariate(s) one markers contained genotypic data. SNP-covariates can set parameter snpCov, vector marker-names. Similarly, covariates specified using parameter covar, containing vector covariate names. gData object contain covariates gData$covar. case SNP-covariates used, GWAS SNPs performed SNP-covariates extra fixed effect; also null model used estimate variance components includes effects. SNP SNP-covariates, p-value obtained using F-test null model estimate variance components, SNPs () SNP-covariates fixed effects.","code":"## Run single trait GWAS for trait 'grain.yield' for Mur13W. ## Use PZE-106021410, the most significant SNP, a SNP covariate. GWASDropsSnpCov <- runSingleTraitGwas(gData = gDataDropsDedup,                                       trials = \"Mur13W\",                                       traits = \"grain.yield\",                                       snpCov = \"PZE-106021410\")"},{"path":"/articles/GWAS.html","id":"minor-allele-frequency","dir":"Articles","previous_headings":"Further options","what":"Minor Allele Frequency","title":"Introduction to the statgenGWAS package","text":"recommended remove SNPs low minor allele frequency (MAF) data starting GWAS analysis. However also possible analysis . difference approaches codeMarkers removes SNPs, whereas runSingleTraitGwas excludes analysis leaves output (results set NA). latter case still possible see allele frequency SNP. default SNPs MAF lower 0.01 excluded analysis. can controlled parameter MAF. Setting MAF 0 still exclude duplicate SNPs since duplicates cause problems fitting underlying models. Instead excluding SNPs low MAF also possible exclude SNPs low minor allele count (MAC). done setting useMAF = FALSE specifying MAC. Note computation allele frequencies runSingleTraitGwas done removal genotypes missing values trait analysis done. lead slightly different values allele frequencies computed codeMarkers (uses genotypic data) resulting removal slightly different set markers.","code":"## Run single trait GWAS for trait 'grain.yield' for Mur13W. ## Only include SNPs that have a MAC of at least 20 GWASDropsMAC <- runSingleTraitGwas(gData = gDataDropsDedup,                                    trials = \"Mur13W\",                                    traits = \"grain.yield\",                                    useMAF = FALSE,                                    MAC = 20)"},{"path":"/articles/GWAS.html","id":"sign","dir":"Articles","previous_headings":"Further options","what":"SNPs close to significant SNPs","title":"Introduction to the statgenGWAS package","text":"Apart significant SNPs , usually interest identify SNPs close significant SNPs. can included output setting sizeIncludedRegion positive value. , SNPs within distance sizeIncludedRegion significant SNP (based information map) included signSnp data.table output. SNPs sufficient linkage disequilibrium (LD) significant SNP included. LD measured terms squared Pearson correlation (\\(R^2\\)). minimum \\(R^2\\) required included can specified setting minR2.","code":"## Run single trait GWAS for trait 'grain.yield' for Mur13W. ## Include SNPs within 200000 centimorgan of significant SNPs with a minimum LD of 0.1. GWASDropsInclClose <- runSingleTraitGwas(gData = gDataDropsDedup,                                          trials = \"Mur13W\",                                          traits = \"grain.yield\",                                          sizeInclRegion = 200000,                                          minR2 = 0.1) ## Check signSnp in output. print(head(GWASDropsInclClose$signSnp$Mur13W), row.names = FALSE) #>        trait           snp chr      pos allFreq  pValue effect effectSe   RLR2  LOD #>  grain.yield PZE-106021308   6 18646399    0.84 5.3e-01 -0.083     0.13 0.0016 0.27 #>  grain.yield PZE-106021320   6 18646911    0.77 4.5e-01  0.088     0.12 0.0023 0.34 #>  grain.yield PZE-106021349   6 18712665    0.87 6.5e-02 -0.274     0.15 0.0137 1.19 #>  grain.yield PZE-106021363   6 18846283    0.70 3.5e-07  0.522     0.10 0.0959 6.46 #>  grain.yield PZE-106021410   6 18990291    0.70 2.3e-07  0.527     0.10 0.0984 6.63 #>  grain.yield PZE-106021419   6 18991091    0.74 2.9e-07  0.525     0.10 0.0971 6.54 #>                          snpStatus propSnpVar #>  within 2e+05 of a significant SNP     0.0015 #>  within 2e+05 of a significant SNP     0.0022 #>  within 2e+05 of a significant SNP     0.0129 #>                    significant SNP     0.0884 #>                    significant SNP     0.0903 #>                    significant SNP     0.0827"},{"path":"/articles/GWAS.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to the statgenGWAS package","text":"Astle, William, David J. Balding. 2009. “Population Structure Cryptic Relatedness Genetic Association Studies.” Statistical Science 24 (4): 451–71. https://doi.org/10.1214/09-sts307. Browning, Sharon R., Brian L. Browning. 2007. “Rapid Accurate Haplotype Phasing Missing-Data Inference Whole-Genome Association Studies Use Localized Haplotype Clustering.” American Journal Human Genetics 81 (5): 1084–97. https://doi.org/10.1086/521987. Brzyski, Damian, Christine B. Peterson, Piotr Sobczyk, Emmanuel J. Candès, Malgorzata Bogdan, Chiara Sabatti. 2016. “Controlling Rate GWAS False Discoveries.” Genetics 205 (1): 61–75. https://doi.org/10.1534/genetics.116.193987. Devlin, B., Kathryn Roeder. 1999. “Genomic Control Association Studies.” Biometrics 55 (4): 997–1004. https://doi.org/10.1111/j.0006-341x.1999.00997.x. Kang, Hyun Min, Jae Hoon Sul, Susan K Service, Noah Zaitlen, Sit-yee Kong, Nelson B Freimer, Chiara Sabatti, Eleazar Eskin. 2010. “Variance Component Model Account Sample Structure Genome-Wide Association Studies.” Nature Genetics 42 (4): 348–54. https://doi.org/10.1038/ng.548. Kang, Hyun Min, Noah . Zaitlen, Claire M. Wade, Andrew Kirby, David Heckerman, Mark J. Daly, Eleazar Eskin. 2008. “Efficient Control Population Structure Model Organism Association Mapping.” Genetics 178 (3): 1709–23. https://doi.org/10.1534/genetics.107.080101. Millet, Emilie J., Cyril Pommier, Mélanie Buy, Axel Nagel, Willem Kruijer, Therese Welz-Bolduan, Jeremy Lopez, et al. 2019. “Multi-Site Experiment Network European Fields Assessing Maize Yield Response Environmental Scenarios.” Portail Data Inra. https://doi.org/10.15454/IASSTN. Millet, Emilie, Claude Welcker, Willem Kruijer, Sandra Negro, Stephane Nicolas, Sebastien Praud, Nicolas Ranc, et al. 2016. “Genome-Wide Analysis Yield Europe: Allelic Effects Functions Drought Heat Scenarios.” Plant Physiology, July, pp.00621.2016. https://doi.org/10.1104/pp.16.00621. Rincent, Renaud, Laurence Moreau, Hervé Monod, Estelle Kuhn, Albrecht E. Melchinger, Rosa . Malvar, Jesus Moreno-Gonzalez, et al. 2014. “Recovering Power Association Mapping Panels Variable Levels Linkage Disequilibrium.” Genetics 197 (1): 375–87. https://doi.org/10.1534/genetics.113.159731. Segura, Vincent, Bjarni J Vilhjálmsson, Alexander Platt, Arthur Korte, Ümit Seren, Quan Long, Magnus Nordborg. 2012. “Efficient Multi-Locus Mixed-Model Approach Genome-Wide Association Studies Structured Populations.” Nature Genetics 44 (7): 825–30. https://doi.org/10.1038/ng.2314. Sun, G, C Zhu, M H Kramer, S-S Yang, W Song, H-P Piepho, J Yu. 2010. “Variation Explained Mixed-Model Association Mapping.” Heredity 105 (4): 333–40. https://doi.org/10.1038/hdy.2010.11. Tunnicliffe, G Wilson. 1989. “Use Marginal Likelihood Time Series Model Estimation.” JRSS 51 (1): 15–27. VanRaden, P. M. 2008. “Efficient Methods Compute Genomic Predictions.” Journal Dairy Science 91 (11): 4414–23. https://doi.org/10.3168/jds.2007-0980.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bart-Jan van Rossum. Author, maintainer. Willem Kruijer. Author. Fred van Eeuwijk. Contributor. Martin Boer. Contributor. Marcos Malosetti. Contributor. Daniela Bustos-Korts. Contributor. Emilie Millet. Contributor. Joao Paulo. Contributor. Maikel Verouden. Contributor. Ron Wehrens. Contributor. Choazhi Zheng. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van Rossum B, Kruijer W (2022). statgenGWAS: Genome Wide Association Studies. https://biometris.github.io/statgenGWAS/index.html, https://github.com/Biometris/statgenGWAS/.","code":"@Manual{,   title = {statgenGWAS: Genome Wide Association Studies},   author = {Bart-Jan {van Rossum} and Willem Kruijer},   year = {2022},   note = {https://biometris.github.io/statgenGWAS/index.html, https://github.com/Biometris/statgenGWAS/}, }"},{"path":"/reference/codeMarkers.html","id":null,"dir":"Reference","previous_headings":"","what":"Code and impute markers — codeMarkers","title":"Code and impute markers — codeMarkers","text":"codeMarkers codes markers gData object optionally performs imputation missing values well. function performs following steps: replace strings naStrings NA. remove genotypes fraction missing values higher nMissGeno. remove SNPs fraction missing values higher nMiss. recode SNPs numerical values. remove SNPs minor allele frequency lower MAF. optionally remove duplicate SNPs. optionally impute missing values. repeat steps 5. 6. missing values imputed.","code":""},{"path":"/reference/codeMarkers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code and impute markers — codeMarkers","text":"","code":"codeMarkers(   gData,   refAll = \"minor\",   nMissGeno = 1,   nMiss = 1,   MAF = NULL,   MAC = NULL,   removeDuplicates = TRUE,   keep = NULL,   impute = TRUE,   imputeType = c(\"random\", \"fixed\", \"beagle\"),   fixedValue = NULL,   naStrings = NA,   verbose = FALSE )"},{"path":"/reference/codeMarkers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code and impute markers — codeMarkers","text":"gData object class gData containing least markers. refAll character string indicating reference allele used recoding markers. \"minor\", recoding done using minor allele reference allele. Alternatively single character can supplied reference allele whole set SNPs, character vector reference allele per SNP. nMissGeno numerical value 0 1. Genotypes fraction missing values higher nMissGeno removed. Genotypes missing values always removed. nMiss numerical value 0 1. SNPs fraction missing values higher nMiss removed. SNPs missing values always removed. MAF numerical value 0 1. SNPs Minor Allele Frequency (MAF) value removed. one MAF MAC may specified. MAC numerical value. SNPs Minor Allele Count (MAC) value removed. one MAF MAC may specified. removeDuplicates duplicate SNPs removed? keep vector SNPs never removed whole process. impute imputation missing values done? imputeType character string indicating kind imputation values done. fixed - missing values replaced given fixed value. random - missing values replaced random value calculated using allele frequencies per SNP. beagle - missing values imputed using beagle software, version 5.2. Beagle accepts integers map positions. use option, please cite original papers publication (see references). fixedValue numerical value used replacing missing values case inputType fixed. naStrings character vector strings treated NA. verbose summary performed steps printed?","code":""},{"path":"/reference/codeMarkers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code and impute markers — codeMarkers","text":"copy input gData object markers replaced coded imputed markers.","code":""},{"path":"/reference/codeMarkers.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Code and impute markers — codeMarkers","text":"S R Browning B L Browning (2007) Rapid accurate haplotype phasing missing data inference whole genome association studies use localized haplotype clustering. J Hum Genet 81:1084-1097. doi: 10.1086/521987","code":""},{"path":"/reference/codeMarkers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Code and impute markers — codeMarkers","text":"","code":"## Create markers markers <- matrix(cncol = 10, byrow = TRUE, dimnames = list(paste0(\"IND\", 1:10), paste0(\"SNP\", 1:10)))  ## create object of class 'gData'. gData <- createGData(geno = markers)  ## Code markers by minor allele, no imputation. gDataCoded1 <- codeMarkers(gData = gData, impute = FALSE)  ## Code markers by reference alleles, impute missings by fixed value. gDataCoded2 <- codeMarkers(gData = gData,                            refAll = rep(x = c(\"A\", \"B\"), times =  5),                            impute = TRUE, imputeType = \"fixed\",                            fixedValue = 1)  ## Code markers by minor allele, impute by random value. gDataCoded3 <- codeMarkers(gData = gData, impute = TRUE,                            imputeType = \"random\")"},{"path":"/reference/dropsData.html","id":null,"dir":"Reference","previous_headings":"","what":"DROPS data sets — dropsData","title":"DROPS data sets — dropsData","text":"dataset comes European Union project DROPS (DROught-tolerant yielding PlantS). panel 256 maize hybrids grown two water regimes (irrigated rainfed), seven fields 2012 2013, respectively, spread along climatic transect western eastern Europe, plus one site Chile 2013. resulted 28 experiments defined combination one year, one site one water regime, two three repetitions rainfed irrigated treatments, respectively. detailed environmental characterisation carried , hourly records micrometeorological data soil water status, associated precise measurement phenology. Grain yield components measured end experiment. 10 experiments selected full data set, two five main environmental scenarios identified data. scenarios added data well classification genotypes four genetic groups. main purpose dataset consists using environmental characterization quantify genetic variability maize grain yield response environmental drivers genotype--environment interaction. instance, allelic effects QTLs identified field network consistent within scenario largely differ scenarios. data split three separate data.frames. dropsMarkers data.frame contains 50K genotyping matrix coded allelic dose (012) filtered imputed. Genotyping 41,722 loci 246 parental lines obtained using 50K Illumina Infinium HD arrays (Ganal et al., 2011). Genotype coded allelic dose 0 minor allele, 1 heterozygote, 2 major allele. Genotype filtered (MAF > 1%) missing data imputed using Beagle v3. data.frame 246 rows 41723 columns. Ind name genotype SYMN83 PZE-110111485 coded QTLs dropsMap data.frame contains description 41,722 loci genotyped 50K Illumina Infinium Array 246 lines. data.frame 41722 rows 5 columns. SNP.names name SNP Chromosome number B73 reference genome V2 Position position B73 reference genome V2 basepairs allele1 first original allele (, T, G C) allele2 second original allele (, T, G C) dropsPheno data.frame contains genotypic means (Best Linear Unbiased Estimators, BLUEs), one value per experiment (Location × year × water regime) per genotype. data.frame 2460 rows 19 columns. Experiment experiments ID described three first letters city’s name followed year experiment water regime W watered R rain-fed. parent1 identifier donor dent line Code_ID, Variety_ID, Accession_ID identifier genotype geno.panel project genetic material generated grain.yield genotypic mean yield adjusted 15% grain moisture, ton per hectare (t ha^-1) grain.number genotypic mean number grain per square meter grain.weight genotypic mean individual grain weight milligram (mg) anthesis genotypic mean male flowering (pollen shed), thermal time cumulated since emergence (d_20°C) silking genotypic mean female flowering (silking emergence), thermal time cumulated since emergence (d_20°C) plant.height genotypic mean plant height, ground level base flag leaf (highest) leaf centimeter (cm) tassel.height genotypic mean plant height including tassel, ground level highest point tassel centimeter (cm) ear.height genotypic mean ear insertion height, ground level ligule highest ear leaf centimeter (cm) year year experiment performed loc location experiment performed, three letter abbreviation scenarioWater water scenario experiment, well watered (WW) water deficit (WD) scenarioTemp temperature scenario experiment, Cool, Hot Hot(Day) scenarioFull full scenario experiment, combination scenarioWater scenarioTemp geneticGroup genetic group genotype belongs","code":""},{"path":"/reference/dropsData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"DROPS data sets — dropsData","text":"https://data.inrae.fr/dataset.xhtml?persistentId=doi:10.15454/IASSTN","code":""},{"path":"/reference/dropsData.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"DROPS data sets — dropsData","text":"source data, experiments 2011 removed since contain genotypes. Also experiment Gra13W removed.","code":""},{"path":"/reference/dropsData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DROPS data sets — dropsData","text":"Millet, E. J., Pommier, C., et al. (2019). multi-site experiment network European fields assessing maize yield response environmental scenarios - Data set. doi: 10.15454/IASSTN Ganal MW, et al. (2011) Large Maize (Zea mays L.) SNP Genotyping Array: Development Germplasm Genotyping, Genetic Mapping Compare B73 Reference Genome. PLoS ONE 6(12): e28334. doi: 10.1371/journal.pone.0028334","code":""},{"path":"/reference/gData.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 Class gData — gData","title":"S3 Class gData — gData","text":"createGData creates object S3 class gData genotypic phenotypic data usage analysis. input function optional, however least one input provided. possible provide existing gData object additional input case data added object. Existing data overwritten warning.","code":""},{"path":"/reference/gData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class gData — gData","text":"","code":"createGData(   gData = NULL,   geno = NULL,   map = NULL,   kin = NULL,   pheno = NULL,   covar = NULL )"},{"path":"/reference/gData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class gData — gData","text":"gData optional gData object modified. NULL, new gData object created. geno matrix data.frame genotypes rows markers columns. matrix matrix base package may provided well matrix Matrix package. row names provided, taken pheno (supplied dimension matches). column names provided, row names map used (supplied dimension matches). map data.frame columns chr chromosome pos position. Positions can base pair (bp) centimorgan (cM). cumulative chromosomes. columns ignored. Marker names row names. match marker names geno (supplied). kin kinship matrix list kinship matrices genotype rows colums. matrices can matrix class, defined base package, dsyMatrix class, class symmetric matrices Matrix package. genotypes identical genotypes geno. list kinship matrices provided supposed chromosome specific matrices. case names match names chromosomes map. names provided, number matrices match number chromosomes map case default names provided. pheno data.frame list data.frames phenotypic data, genotypes first column genotype traits following columns. trait columns numerical columns . list data.frames can used replications, .e. different trials. covar data.frame extra covariates per genotype. Genotypes rows.","code":""},{"path":"/reference/gData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 Class gData — gData","text":"object class gData following components: map data.frame containing map data. Map sorted chromosome position. markers matrix containing marker information. pheno list data.frames containing phenotypic data. kinship kinship matrix. covar data.frame extra covariates.","code":""},{"path":[]},{"path":"/reference/gData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S3 Class gData — gData","text":"Bart-Jan van Rossum","code":""},{"path":"/reference/gData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 Class gData — gData","text":"","code":"set.seed(1234) ## Create genotypic data. geno <- matrix(sample(x = c(0, 1, 2), size = 15, replace = TRUE), nrow = 3) dimnames(geno) <- list(paste0(\"G\", 1:3), paste0(\"M\", 1:5))  ## Construct map. map <- data.frame(chr = c(1, 1, 2, 2, 2), pos = 1:5,                   row.names = paste0(\"M\", 1:5))  ## Compute kinship matrix. kin <- kinship(X = geno, method = \"IBS\")  ## Create phenotypic data. pheno <- data.frame(paste0(\"G\", 1:3),                     matrix(rnorm(n = 12, mean = 50, sd = 5), nrow = 3),                     stringsAsFactors = FALSE) dimnames(pheno) = list(paste0(\"G\", 1:3), c(\"genotype\", paste0(\"T\", 1:4)))  ## Combine all data in gData object. gData <- createGData(geno = geno, map = map, kin = kin, pheno = pheno) summary(gData) #> map #> \tNumber of markers: 5  #> \tNumber of chromosomes: 2  #>  #> markers #> \tNumber of markers: 5  #> \tNumber of genotypes: 3  #> \tContent: #> \t 0 1 2 NA  #> \t 0.2 0.6 0.2 0  #>  #> pheno #> \tNumber of trials: 1  #>  #> \tpheno: #> \t\tNumber of traits: 4  #> \t\tNumber of genotypes: 3  #>  #>               T1       T2       T3       T4 #> Min.    41.24633 41.56337 46.76490 51.55131 #> 1st Qu. 44.33149 44.21309 48.42824 51.71474 #> Median  47.41665 46.86282 50.09158 51.87818 #> Mean    47.68783 48.42541 50.12757 52.59013 #> 3rd Qu. 50.90859 51.85644 51.80890 53.10954 #> Max.    54.40052 56.85005 53.52622 54.34090 #> NA's     0.00000  0.00000  0.00000  0.00000 #>   ## Construct covariate. covar <- data.frame(C1 = c(\"a\", \"a\", \"b\"), row.names = paste0(\"G\", 1:3))  ## Compute alternative kinship matrix. kin2 <- kinship(X = geno, method = \"astle\")  ## Add covariates to previously created gData object and overwrite ## current kinship matrix by newly computed one. gData2 <- createGData(gData = gData, kin = kin2, covar = covar) #> Warning: Existing kinship will be overwritten."},{"path":"/reference/kinship.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for calculating kinship matrices — kinship","title":"Functions for calculating kinship matrices — kinship","text":"collection functions calculating kinship matrices using different algorithms. following algorithms included: astle (Astle Balding, 2009), Identity State (IBS) VanRaden (VanRaden, 2008) marker matrices. method identity identity kinship matrix returned.","code":""},{"path":"/reference/kinship.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for calculating kinship matrices — kinship","text":"","code":"kinship(   X,   method = c(\"astle\", \"IBS\", \"vanRaden\", \"identity\"),   denominator = NULL )"},{"path":"/reference/kinship.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for calculating kinship matrices — kinship","text":"X n x m marker matrix genotypes rows (n) markers columns (m). method method used computing kinship matrix. denominator numerical value. See details.","code":""},{"path":"/reference/kinship.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for calculating kinship matrices — kinship","text":"n x n kinship matrix.","code":""},{"path":"/reference/kinship.html","id":"marker-matrices","dir":"Reference","previous_headings":"","what":"Marker matrices","title":"Functions for calculating kinship matrices — kinship","text":"algorithms input matrix X first cleaned, .e. markers variance 0 excluded calculation kinship matrix. form scaling done differs per algorithm. gives scaled matrix Z. matrix \\(ZZ^t / denominator\\) returned. default denominator equal number columns Z astle IBS \\(2 * p * (1-p)\\) \\(p = colSums(X) / (2 * nrow(X))\\) vanRaden. denominator can overwritten user, e.g. computing kinship matrices splitting X smaller matrices adding results together end.","code":""},{"path":"/reference/kinship.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functions for calculating kinship matrices — kinship","text":"Astle, William, David J. Balding. 2009. “Population Structure Cryptic Relatedness Genetic Association Studies.” Statistical Science 24 (4): 451–71. doi: 10.1214/09-sts307 . VanRaden P.M. (2008) Efficient methods compute genomic predictions. Journal Dairy Science 91 (11): 4414–23. doi: 10.3168/jds.2007-0980 .","code":""},{"path":"/reference/kinship.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for calculating kinship matrices — kinship","text":"","code":"## Create example matrix. M <- matrix(c(1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1), nrow = 3)  ## Compute kinship matrices using different methods. kinship(M, method = \"astle\") #>       [,1]  [,2]  [,3] #> [1,]  0.50 -0.25 -0.25 #> [2,] -0.25  0.50 -0.25 #> [3,] -0.25 -0.25  0.50 kinship(M, method = \"IBS\") #>           [,1]      [,2]      [,3] #> [1,] 1.0000000 0.3333333 0.3333333 #> [2,] 0.3333333 1.0000000 0.3333333 #> [3,] 0.3333333 0.3333333 1.0000000 kinship(M, method = \"vanRaden\") #>       [,1]  [,2]  [,3] #> [1,]  0.50 -0.25 -0.25 #> [2,] -0.25  0.50 -0.25 #> [3,] -0.25 -0.25  0.50  ## Compute kinship matrix using astle and balding method with denominator 2. kinship(M, method = \"astle\", denominator = 2) #>        [,1]   [,2]   [,3] #> [1,]  0.750 -0.375 -0.375 #> [2,] -0.375  0.750 -0.375 #> [3,] -0.375 -0.375  0.750"},{"path":"/reference/plot.GWAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for the class GWAS — plot.GWAS","title":"Plot function for the class GWAS — plot.GWAS","text":"Creates plot object S3 class GWAS. following types plot can made: manhattan plot, .e. plot LOD-scores per SNP QQ plot observed LOD-scores versus expected LOD-scores qtl plot effect sizes directions multiple traits Manhattan plots QQ plots made single trait indicated using parameter trait. analysis done one trait, detected automatically. qtl plot plot traits analyzed. See details detailed description plots plot options specific different plots.","code":""},{"path":"/reference/plot.GWAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for the class GWAS — plot.GWAS","text":"","code":"# S3 method for GWAS plot(   x,   ...,   plotType = c(\"manhattan\", \"qq\", \"qtl\"),   trial = NULL,   trait = NULL,   title = NULL,   output = TRUE )"},{"path":"/reference/plot.GWAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for the class GWAS — plot.GWAS","text":"x object class GWAS. ... arguments passed actual plotting functions. plotType character string indicating type plot made. One \"manhattan\", \"qq\" \"qtl\". trial character string numeric index indicating trial plot made. x contains results one trial, trial may NULL. trait character string indicating trait results plotted. type \"qtl\" traits plotted. x contains results one trait, trait may NULL. title character string, title plot. output plot output current device? FALSE, list ggplot objects invisibly returned.","code":""},{"path":"/reference/plot.GWAS.html","id":"manhattan-plot","dir":"Reference","previous_headings":"","what":"Manhattan Plot","title":"Plot function for the class GWAS — plot.GWAS","text":"LOD-profile marker positions corresponding LOD-scores plotted. Significant markers highlighted red dots. default taken result GWAS analysis however LOD-threshold significant parameters may modified using parameter yThr. threshold plotted horizontal line. previously known marker effect, false positives true negatives can also marked. Extra parameter options: xLab character string, x-axis label. Default = \"Chromosomes\" yLab character string, y-axis label. Default = -log10(p) effects character vector, indicating SNPs correspond real (known) effect. Used determining true/false positives false negatives. True positives colored green, false positives orange false negatives yellow. colPalette color palette used plotting. Default coloring done chromosome, using black grey. yThr numerical value LOD-threshold. value GWAS analysis used default. signLwd numerical value giving thickness points false/true positives/negatives. Default = 0.6 lod positive numerical value. SNPs LOD-value value, 5% plotted. chance SNP plotted proportional LOD-score. option can useful plotting large number SNPs. 5% SNPs plotted selected randomly. reproducible results use set.seed calling function. chr vector chromosomes plotted. default, chromosomes plotted. Using option allows restricting plot subset chromosomes. startPos numerical value indicating start position plot. Using option allows restricting plot part selected chromosome. used exactly one chromosome specified chr. endPos numerical value indicating end position plot. Using option allows restricting plot part selected chromosome. used exactly one chromosome specified chr.","code":""},{"path":"/reference/plot.GWAS.html","id":"qq-plot","dir":"Reference","previous_headings":"","what":"QQ-Plot","title":"Plot function for the class GWAS — plot.GWAS","text":"LOD-scores calculated GWAS analysis, QQ-plot generated observed LOD-scores versus expected LOD-scores. Code adapted Segura et al. (2012).","code":""},{"path":"/reference/plot.GWAS.html","id":"qtl-plot","dir":"Reference","previous_headings":"","what":"QTL Plot","title":"Plot function for the class GWAS — plot.GWAS","text":"plot effect sizes significant SNPs found GWAS analysis created. horizontal line contains QTLs one trait, phenotypic trait trial. Optionally, vertical white lines can indicate chromosome subdivision, genes interest, known QTL, etc. Circle diameters proportional absolute value allelic effect. Colors indicate direction effect: green allele increases trait value, blue decreases value. Extra parameter options: normalize snpEffect normalized? Default = FALSE sortData data sorted plotting? Either FALSE, sorting done, character string indicating data column use sorting. numerical column. Default = FALSE binPositions optional data.frame containing leasts two columns, chr(omosome) pos(ition). Vertical lines plotted positions. Default = NULL printVertGrid default vertical grid lines plotted. Default = TRUE yLab character string, y-axis label. Default = \"Traits\" yThr numerical value LOD-threshold. value GWAS analysis used default. chr vector chromosomes plotted. default chromosomes plotted. Using option can restricted subset chromosomes. exportPptx plot exported .pptx file? Default = FALSE pptxName character string, name .pptx file plot exported. Ignored exportPptx = FALSE.","code":""},{"path":"/reference/plot.GWAS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot function for the class GWAS — plot.GWAS","text":"Millet et al. (2016) Genome-wide analysis yield Europe: Allelic effects vary drought heat scenarios. Plant Physiology, October 2016, Vol. 172, p. 749–764 Segura et al. (2012) efficient multi-locus mixed-model approach genome-wide association studies structured populations. Nature Genetics, June 2012, Vol. 44, p. 825–830.","code":""},{"path":"/reference/plot.GWAS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for the class GWAS — plot.GWAS","text":"","code":"## Create a gData object Using the data from the DROPS project. ## See the included vignette for a more extensive description on the steps. data(dropsMarkers) data(dropsMap) data(dropsPheno)  ## Add genotypes as row names of dropsMarkers and drop Ind column. rownames(dropsMarkers) <- dropsMarkers[[\"Ind\"]] dropsMarkers <- dropsMarkers[colnames(dropsMarkers) != \"Ind\"]  ## Add genotypes as row names of dropsMap. rownames(dropsMap) <- dropsMap[[\"SNP.names\"]]  ## Rename Chomosome and Position columns. colnames(dropsMap)[match(c(\"Chromosome\", \"Position\"),                     colnames(dropsMap))] <- c(\"chr\", \"pos\")                     ## Convert phenotypic data to a list. dropsPhenoList <- split(x = dropsPheno, f = dropsPheno[[\"Experiment\"]])  ## Rename Variety_ID to genotype and select relevant columns. dropsPhenoList <- lapply(X = dropsPhenoList, FUN = function(trial) {   colnames(trial)[colnames(trial) == \"Variety_ID\"] <- \"genotype\"   trial <- trial[c(\"genotype\", \"grain.yield\", \"grain.number\", \"seed.size\",                  \"anthesis\", \"silking\", \"plant.height\", \"tassel.height\",                  \"ear.height\")] return(trial) })   ## Create gData object. gDataDrops <- createGData(geno = dropsMarkers, map = dropsMap,                            pheno = dropsPhenoList)                            ## Run single trait GWAS for trait 'grain.yield' for trial Mur13W. # \\donttest{ GWASDrops <- runSingleTraitGwas(gData = gDataDrops,                                trials = \"Mur13W\",                                traits = \"grain.yield\")                                 ## Create a manhattan plot. plot(GWASDrops)   ## Manually set a threshold for significant snps and add a title. plot(GWASDrops,      yThr = 3.5,      title = \"Manhattan plot for Mur13W\")       ## Restrict plot to part of chr 6. plot(GWASDrops,      yThr = 3.5,      chr = 6,     startPos = 0,     endPos = 110000000)       ## Create a qq plot. plot(GWASDrops,      plotType = \"qq\",     title = \"QQ plot for Mur13W\")       ## Create a QTL plot. plot(GWASDrops,     plotType = \"qtl\",     title = \"QTL plot for Mur13W\")       ## Manually set a threshold and don't show vertical lines. plot(GWASDrops,          plotType = \"qtl\",     yThr = 3.5,     printVertGrid = FALSE,     title = \"QTL plot for Mur13W\")            # }"},{"path":"/reference/plot.gData.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for the class gData — plot.gData","title":"Plot function for the class gData — plot.gData","text":"Creates plot genetic map object S3 class gData. plot genetic map showing length chromosomes positions markers genetic map created.","code":""},{"path":"/reference/plot.gData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for the class gData — plot.gData","text":"","code":"# S3 method for gData plot(x, ..., highlight = NULL, title = NULL, output = TRUE)"},{"path":"/reference/plot.gData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for the class gData — plot.gData","text":"x object class gData. ... used. highlight data.frame least columns chr pos, containing marker positions highlighted plot. column \"name\" present used annotation, otherwise highlighted markers annotated chr\\@pos#' title character string, title plot. output plot output current device? FALSE, ggplot object invisibly returned.","code":""},{"path":"/reference/plot.gData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function for the class gData — plot.gData","text":"object class ggplot invisibly returned.","code":""},{"path":"/reference/plot.gData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for the class gData — plot.gData","text":"","code":"set.seed(1234) ## Create genotypic data. geno <- matrix(sample(x = c(0, 1, 2), size = 15, replace = TRUE), nrow = 3) dimnames(geno) <- list(paste0(\"G\", 1:3), paste0(\"M\", 1:5))  ## Construct map. map <- data.frame(chr = c(1, 1, 2, 2, 2), pos = 1:5,                   row.names = paste0(\"M\", 1:5))  ## Compute kinship matrix. kin <- kinship(X = geno, method = \"IBS\")  ## Create phenotypic data. pheno <- data.frame(paste0(\"G\", 1:3),                     matrix(rnorm(n = 12, mean = 50, sd = 5), nrow = 3),                     stringsAsFactors = FALSE) dimnames(pheno) = list(paste0(\"G\", 1:3), c(\"genotype\", paste0(\"T\", 1:4)))  ## Combine all data in gData object. gData <- createGData(geno = geno, map = map, kin = kin, pheno = pheno)  ## Plot genetic map. plot(gData)   ## Plot genetic map. Highlight first marker in map. plot(gData, highlight = map[1, ])"},{"path":"/reference/runSingleTraitGwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform single-trait GWAS — runSingleTraitGwas","title":"Perform single-trait GWAS — runSingleTraitGwas","text":"runSingleTraitGwas performs single-trait Genome Wide Association Study (GWAS) phenotypic genotypic data contained gData object. covariance matrix computed using EMMA algorithm (Kang et al., 2008) Newton-Raphson algorithm (Tunnicliffe, 1989) sommer package. Generalized Least Squares (GLS) method used estimating marker effects corresponding p-values. done using either one kinship matrix chromosomes different chromosome-specific kinship matrices chromosome. Significant SNPs selected based user defined threshold.","code":""},{"path":"/reference/runSingleTraitGwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform single-trait GWAS — runSingleTraitGwas","text":"","code":"runSingleTraitGwas(   gData,   traits = NULL,   trials = NULL,   covar = NULL,   snpCov = NULL,   kin = NULL,   kinshipMethod = c(\"astle\", \"IBS\", \"vanRaden\"),   remlAlgo = c(\"EMMA\", \"NR\"),   GLSMethod = c(\"single\", \"multi\"),   useMAF = TRUE,   MAF = 0.01,   MAC = 10,   genomicControl = FALSE,   thrType = c(\"bonf\", \"fixed\", \"small\", \"fdr\"),   alpha = 0.05,   LODThr = 4,   nSnpLOD = 10,   pThr = 0.05,   rho = 0.5,   sizeInclRegion = 0,   minR2 = 0.5,   nCores = NULL )"},{"path":"/reference/runSingleTraitGwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform single-trait GWAS — runSingleTraitGwas","text":"gData object class gData containing least map, markers pheno. traits vector traits run GWAS. can either numeric indices character names columns pheno. NULL, GWAS run traits. trials vector trials run GWAS. can either numeric indices character names list items pheno. NULL, GWAS run trials. GWAS run selected trials sequential order. covar optional vector covariates taken account running GWAS. can either numeric indices character names columns covar gData. NULL covariates used. snpCov optional character vector snps included covariates. kin optional kinship matrix list kinship matrices. matrices can matrix class defined base package dsyMatrix class, class symmetric matrices Matrix package. GLSMethod = \"single\" one matrix provided, GLSMethod = \"multi\", list chromosome specific matrices length equal number chromosomes map gData. NULL matrix kinship gData used.  kin provided gData contains matrix kinship kin used. kinshipMethod optional character indicating method used calculating kinship matrix(ces). Currently \"astle\" (Astle Balding, 2009), \"IBS\" \"vanRaden\" (VanRaden, 2008) supported. kinship matrix supplied either gData parameter kin, kinshipMethod ignored. remlAlgo character string indicating algorithm used estimate variance components. Either EMMA, EMMA algorithm, NR, Newton-Raphson algorithm. GLSMethod character string indicating method used estimate marker effects. Either single using single kinship matrix, multi using chromosome specific kinship matrices. useMAF minor allele frequency used selecting SNPs analysis. FALSE, minor allele count used instead. MAF minor allele frequency (MAF) threshold used GWAS. numerical value 0 1. SNPs MAF value taken account analysis, .e. p-values effect sizes put missing (NA). Ignored useMAF FALSE. MAC numerical value. SNPs minor allele count value taken account analysis, .e. p-values effect sizes set missing (NA). Ignored useMAF TRUE. genomicControl genomic control correction Devlin Roeder (1999) applied? thrType character string indicating type threshold used selection candidate loci. See Details. alpha numerical value used calculating LOD-threshold thrType = \"bonf\" significant p-Values thrType = \"fdr\". LODThr numerical value used LOD-threshold thrType = \"fixed\". nSnpLOD numerical value indicating number SNPs smallest p-values selected thrType = \"small\". pThr numerical value just cut value p-Values thrType = \"fdr\". rho numerical value used minimum value SNPs considered correlated using thrType = \"fdr\". sizeInclRegion integer. results SNPs close significant SNPs included? , size region centimorgan base pairs. Otherwise 0. minR2 numerical value 0 1. Restricts SNPs included region close significant SNPs SNPs sufficient Linkage Disequilibrium (LD) significant snp, LD measured terms \\(R^2\\). example sizeInclRegion = 200000 minR2 = 0.5, every significant SNP also SNPs whose LD (\\(R^2\\)) significant SNP least 0.5 200000 away significant snp included. Ignored sizeInclRegion = 0. nCores numerical value indicating number cores used parallel part algorithm. NULL number cores used equal number cores available machine - 1.","code":""},{"path":"/reference/runSingleTraitGwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform single-trait GWAS — runSingleTraitGwas","text":"object class GWAS.","code":""},{"path":"/reference/runSingleTraitGwas.html","id":"threshold-types-for-the-selection-of-candidate-loci","dir":"Reference","previous_headings":"","what":"Threshold types for the selection of candidate loci","title":"Perform single-trait GWAS — runSingleTraitGwas","text":"selection candidate loci GWAS output four different methods can used. method used can specified function parameter thrType. parameters can used fine tune method. bonf Bonferroni threshold, LOD-threshold \\(-log10(alpha / m)\\), m number SNPs alpha can specified function parameter alpha fixed fixed LOD-threshold, specified function parameter LODThr small n SNPs smallest p-Values selected. n can specified nSnpLOD fdr Following algorithm proposed Brzyski D. et al. (2017), SNPs selected way False Discovery Rate (fdr) minimized. , first SNPs restricted SNPs p-Value pThr. clusters SNPs created using two step iterative process first SNP lowest p-Value selected cluster representative. SNP SNPs correlation SNP \\(\\rho\\) higher form cluster. \\(\\rho\\) can specified argument function default value 0.5, recommended starting value practice. selected SNPs removed list procedure repeated SNPs left. Finally determine number significant clusters first cluster determined p-Value cluster representative smaller \\(cluster_{number} * \\alpha / m\\) m number SNPs alpha can specified function parameter alpha. previous clusters selected significant.","code":""},{"path":"/reference/runSingleTraitGwas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform single-trait GWAS — runSingleTraitGwas","text":"Astle, William, David J. Balding. 2009. Population Structure Cryptic Relatedness Genetic Association Studies. Statistical Science 24 (4): 451–71. doi: 10.1214/09-sts307 . Brzyski D. et al. (2017) Controlling Rate GWAS False Discoveries. Genetics 205 (1): 61-75. doi: 10.1534/genetics.116.193987 Devlin, B., Kathryn Roeder. 1999. Genomic Control Association Studies. Biometrics 55 (4): 997–1004. doi: 10.1111/j.0006-341x.1999.00997.x . Kang et al. (2008) Efficient Control Population Structure Model Organism Association Mapping. Genetics 178 (3): 1709–23. doi: 10.1534/genetics.107.080101 . Millet, E. J., Pommier, C., et al. (2019). multi-site experiment network European fields assessing maize yield response environmental scenarios - Data set. doi: 10.15454/IASSTN Rincent et al. (2014) Recovering power association mapping panels variable levels linkage disequilibrium. Genetics 197 (1): 375–87. doi: 10.1534/genetics.113.159731 . Segura et al. (2012) efficient multi-locus mixed-model approach genome-wide association studies structured populations. Nature Genetics 44 (7): 825–30. doi: 10.1038/ng.2314 . Sun et al. (2010) Variation explained mixed-model association mapping. Heredity 105 (4): 333–40. doi: 10.1038/hdy.2010.11 . Tunnicliffe W. (1989) use marginal likelihood time series model estimation. JRSS 51 (1): 15–27. VanRaden P.M. (2008) Efficient methods compute genomic predictions. Journal Dairy Science 91 (11): 4414–23. doi: 10.3168/jds.2007-0980 .","code":""},{"path":[]},{"path":"/reference/runSingleTraitGwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform single-trait GWAS — runSingleTraitGwas","text":"","code":"## Create a gData object Using the data from the DROPS project. ## See the included vignette for a more extensive description on the steps. data(dropsMarkers) data(dropsMap) data(dropsPheno)  ## Add genotypes as row names of dropsMarkers and drop Ind column. rownames(dropsMarkers) <- dropsMarkers[[\"Ind\"]] dropsMarkers <- dropsMarkers[colnames(dropsMarkers) != \"Ind\"]  ## Add genotypes as row names of dropsMap. rownames(dropsMap) <- dropsMap[[\"SNP.names\"]]  ## Rename Chomosome and Position columns. colnames(dropsMap)[match(c(\"Chromosome\", \"Position\"),                     colnames(dropsMap))] <- c(\"chr\", \"pos\")                     ## Convert phenotypic data to a list. dropsPhenoList <- split(x = dropsPheno, f = dropsPheno[[\"Experiment\"]])  ## Rename Variety_ID to genotype and select relevant columns. dropsPhenoList <- lapply(X = dropsPhenoList, FUN = function(trial) {   colnames(trial)[colnames(trial) == \"Variety_ID\"] <- \"genotype\"   trial <- trial[c(\"genotype\", \"grain.yield\", \"grain.number\", \"seed.size\",                  \"anthesis\", \"silking\", \"plant.height\", \"tassel.height\",                  \"ear.height\")] return(trial) })   ## Create gData object. gDataDrops <- createGData(geno = dropsMarkers, map = dropsMap,                            pheno = dropsPhenoList)                            ## Run single trait GWAS for trait 'grain.yield' for trial Mur13W. # \\donttest{ GWASDrops <- runSingleTraitGwas(gData = gDataDrops,                                trials = \"Mur13W\",                                traits = \"grain.yield\") # }                                 ## Run single trait GWAS for trait 'grain.yield' for trial Mur13W. ## Use chromosome specific kinship matrices calculated using vanRaden method. # \\donttest{ GWASDropsMult <- runSingleTraitGwas(gData = gDataDrops,                                     trials = \"Mur13W\",                                     traits = \"grain.yield\",                                     kinshipMethod = \"vanRaden\",                                     GLSMethod = \"multi\")   # }"},{"path":"/reference/statgenGWAS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"statgenGWAS: Genome Wide Association Studies — statgenGWAS-package","title":"statgenGWAS: Genome Wide Association Studies — statgenGWAS-package","text":"Fast single trait Genome Wide Association Studies (GWAS) following method described Kang et al. (2010), <doi:10.1038/ng.548>. One series statistical genetic packages streamlining analysis typical plant breeding experiments developed Biometris.","code":""},{"path":[]},{"path":"/reference/statgenGWAS-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"statgenGWAS: Genome Wide Association Studies — statgenGWAS-package","text":"Maintainer: Bart-Jan van Rossum bart-jan.vanrossum@wur.nl (ORCID) Authors: Willem Kruijer (ORCID) contributors: Fred van Eeuwijk (ORCID) [contributor] Martin Boer [contributor] Marcos Malosetti (ORCID) [contributor] Daniela Bustos-Korts (ORCID) [contributor] Emilie Millet (ORCID) [contributor] Joao Paulo (ORCID) [contributor] Maikel Verouden (ORCID) [contributor] Ron Wehrens (ORCID) [contributor] Choazhi Zheng (ORCID) [contributor]","code":""},{"path":"/reference/summary.GWAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for the class GWAS — summary.GWAS","title":"Summary function for the class GWAS — summary.GWAS","text":"Gives summary object S3 class GWAS.","code":""},{"path":"/reference/summary.GWAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for the class GWAS — summary.GWAS","text":"","code":"# S3 method for GWAS summary(object, ..., trials = NULL, traits = NULL)"},{"path":"/reference/summary.GWAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for the class GWAS — summary.GWAS","text":"object object class GWAS. ... used. trials vector strings numeric indices indicating trials summary made. NULL, summary made trials. traits vector strings indicating traits include summary. NULL, traits included summary.","code":""},{"path":"/reference/summary.gData.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for the class gData — summary.gData","title":"Summary function for the class gData — summary.gData","text":"Gives summary object S3 class gData.","code":""},{"path":"/reference/summary.gData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for the class gData — summary.gData","text":"","code":"# S3 method for gData summary(object, ..., trials = NULL)"},{"path":"/reference/summary.gData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for the class gData — summary.gData","text":"object object class gData. ... used. trials vector trials include summary. can either numeric indices character names list items pheno. NULL, trials included.","code":""},{"path":"/reference/summary.gData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary function for the class gData — summary.gData","text":"list four components: mapSum list number markers number chromosomes map. markerSum list number markers, number genotypes distribution values within markers. phenoSum list data.frames, one per trial summary traits within trial. covarSum list data.frames, one per trial summary covariates within trial. components present output corresponding content present gData object.","code":""},{"path":"/news/index.html","id":"statgengwas-108","dir":"Changelog","previous_headings":"","what":"statgenGWAS 1.0.8","title":"statgenGWAS 1.0.8","text":"gData object now plot function allowing plotting genetic map. bug gData summaries one trait present phenotypic data fixed. bug runSingleTraitGwas fixed now allowing using traits pheno covariates covar. Sorting chromosomes map now done correctly numeric values stored character.","code":""},{"path":"/news/index.html","id":"statgengwas-107","dir":"Changelog","previous_headings":"","what":"statgenGWAS 1.0.7","title":"statgenGWAS 1.0.7","text":"CRAN release: 2021-07-29 user visual changes.","code":""},{"path":"/news/index.html","id":"statgengwas-106","dir":"Changelog","previous_headings":"","what":"statgenGWAS 1.0.6","title":"statgenGWAS 1.0.6","text":"CRAN release: 2021-07-26 plot function now option title. codeMarkers function now option MAC equivalent option runSingleTraitGwas. Bug using tibbles instead data.frames input covariates fixed. kinship function now option returning named identity matrix output. extra check presence . character marker matrix added. correct SNPs now excluded using MAF/MAC. function documentation vignette revised extra clarification added needed. beagle software used imputation updated version 5.2. Bug computation genomic inflation factor fixed. incorrectly computed 1 / genomic inflation factor. data vignette updated environments included match statgen packages. manhattan plot function gained arguments setting start end position plotting results single chromosome.","code":""},{"path":"/news/index.html","id":"statgengwas-105","dir":"Changelog","previous_headings":"","what":"statgenGWAS 1.0.5","title":"statgenGWAS 1.0.5","text":"CRAN release: 2020-09-29 option fdr (false discovery rate) added selecting significant SNPs running single trait GWAS. procedure based Brzyski et al. (2017). See function documentation vignette extensive explanation. summary function objects class GWAS now option traits restricting number traits summary printed. Problem codeMarkers getting slow large character matrix inputs fixed moving part code c++. Full ggplot2 longer imported. Removed use deprecated ggplot2::expand_scale.","code":""},{"path":"/news/index.html","id":"statgengwas-104","dir":"Changelog","previous_headings":"","what":"statgenGWAS 1.0.4","title":"statgenGWAS 1.0.4","text":"CRAN release: 2020-03-02 stringsAsFactors = TRUE added applicable comply new defaults R 4.0. Bug plotting GWAS objects fixed. first trait always plotted case one trait present.","code":""},{"path":"/news/index.html","id":"statgengwas-103","dir":"Changelog","previous_headings":"","what":"statgenGWAS 1.0.3","title":"statgenGWAS 1.0.3","text":"CRAN release: 2020-01-27 Dependency deprecated rvg::ph_with_vg_at removed. OMP_THREAD_LIMIT now respected parallel code.","code":""},{"path":"/news/index.html","id":"statgengwas-102","dir":"Changelog","previous_headings":"","what":"statgenGWAS 1.0.2","title":"statgenGWAS 1.0.2","text":"CRAN release: 2020-01-20 Fixed problem compilation Solaris","code":""},{"path":"/news/index.html","id":"statgengwas-101","dir":"Changelog","previous_headings":"","what":"statgenGWAS 1.0.1","title":"statgenGWAS 1.0.1","text":"CRAN release: 2020-01-19 Initial CRAN version","code":""}]
